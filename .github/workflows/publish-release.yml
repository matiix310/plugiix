name: Publish release

on:
  workflow_dispatch:
  push:
    paths:
      - 'stable.md'
      
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 20
      uses: actions/setup-java@v3
      with:
        java-version: '20'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Extract Maven project version
      run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
      id: project

    - name: Upload jAR file
      uses: actions/upload-artifact@v3.0.0
      with:
        path: target/Plugiix-${{ steps.project.outputs.version }}.jar
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.project.outputs.version }}
        release_name: Plugiix ${{ steps.project.outputs.version }}
        body_path: "stable.md"
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: target/Plugiix-${{ steps.project.outputs.version }}.jar
        asset_name: Plugiix-${{ steps.project.outputs.version }}.jar
        asset_content_type: application/java-archive
